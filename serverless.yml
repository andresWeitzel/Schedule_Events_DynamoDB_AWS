service: schedule-events-dynamodb-aws

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region : us-west-1
  memorySize: 512
  timeout : 10
  environment: ${file(./serverless_ssm.yml)}
  apiGateway:
    apiKeys:
      - name : xApiKey
        value : ${file(./serverless_ssm.yml):X_API_KEY}
  logs:
    # Enable REST API logs
    restApi:
      accessLogging: true
      format: "requestId: $context.requestId"
      executionLogging: true
      level: INFO
      fullExecutionData: truet
      role: arn:aws:iam::xxxx:role
      roleManagedExternally: false           

plugins:
    - serverless-dynamodb-local
    - serverless-offline-ssm
    - serverless-offline  

functions:
  createUser:
    handler: src/controllers/createUser.add
    description: Function to create a user in a programmed way and store it in the db
    events:
      - http:
          method: post
          path: /create
          private: true
      # Invoke Lambda function every rate time
      - schedule: rate(2 minute)
      # Invoke Lambda function every 2nd minute from Mon-Fri
      - schedule: cron(0/2 * ? * MON-FRI *)            
  getAllUsers:
    handler: src/controllers/getUsers.get
    description: Function to obtain a user in a programmed way from the db
    events:
      - http:
          method: get
          path: /get-all
          private: true
      # Invoke Lambda function every rate time
      - schedule: rate(3 minute)
           


resources:
  - ${file(src/resources/api-gateway.yml)}
  - ${file(src/resources/dynamo-table.yml)}    

custom:
  serverless-offline:
    httpPort: 4000
    lambdaPort: 4002    
  serverless-offline-ssm:
    stages:
      - dev
    ssm: 
      ${file(./serverless_ssm.yml)}
  dynamodb:
    stages:
      - dev
      
